/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;
import static main.MailClient.flujoDatosEntrada;
import static main.MailClient.flujoDatosSalida;

/**
 *
 * @author JoséCarlos
 */
public class Ip extends javax.swing.JFrame {
   
    /**
     * Creates new form Ip
     */
    public Ip() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        IpInput = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setForeground(java.awt.Color.white);
        jLabel2.setText("Ingrese la IP del Servidor");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 160, -1, -1));

        IpInput.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        IpInput.setText("192.168.1.6");
        IpInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IpInputActionPerformed(evt);
            }
        });
        getContentPane().add(IpInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 200, 300, 50));

        jButton1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButton1.setText("Conectar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 260, 140, 60));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel6.setForeground(java.awt.Color.white);
        jLabel6.setText("PROYECTO FINAL CC2");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 470, -1, -1));

        jLabel10.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel10.setForeground(java.awt.Color.white);
        jLabel10.setText("18001882 - Harim Abdalá Palma Salvatierra");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 490, -1, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel7.setForeground(java.awt.Color.white);
        jLabel7.setText("18002715 - Jair Alexander Flores Martínez");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 510, -1, -1));

        jLabel9.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel9.setForeground(java.awt.Color.white);
        jLabel9.setText("18001167 - Manuel José Santos Méndez");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 530, -1, -1));

        jLabel8.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel8.setForeground(java.awt.Color.white);
        jLabel8.setText("17001087 - José Carlos Loarca Hass");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 550, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/comettt.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IpInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IpInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IpInputActionPerformed

    /**
     * Intenta realizar conexion al servidor ingresado
     * 
     * @param evt 
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(IpInput.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor ingrese un valor.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            String ipAddress = IpInput.getText();
            /*Timer timer = new Timer();
            int PUERTO = 1400;
            Socket conexion = null;*/
         
        try{
            /*System.out.println("Intentamos crear la conexion: " + ipAddress);
            
            //Realizamos nueva conexion a la ip y puerto especificados
            conexion = new Socket(ipAddress,PUERTO);
            DataInputStream flujoDatosEntrada = new DataInputStream(conexion.getInputStream());
            DataOutputStream flujoDatosSalida = new DataOutputStream(conexion.getOutputStream());//Creamos objeto para enviar*/


            //Si la conexion fue realizada exitosamente mostramos ventana login y programamos comando NOOP.
            Login login = new Login();
            login.setIp(ipAddress);
            //login.setInfo(flujoDatosEntrada, flujoDatosSalida, conexion);
            login.setVisible(true);
            this.setVisible(false);
            //timer.scheduleAtFixedRate(timerTask, 0, 15000);
            
        } catch (Exception e){
            System.out.println("No se pudo crear la conexion.");
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error al conectar al servidor.", "Error", JOptionPane.ERROR_MESSAGE);
        }
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ip().setVisible(true);
            }
        });
    }

    /**
     * Metodo para ejecutar la tarea programada de comando NOOP entre cliente y servidor.
     */
    static TimerTask timerTask = new TimerTask() {
        public void run() {
            
            String reqStr = "NOOP";
            
            try {
                flujoDatosSalida.writeUTF(reqStr);
                
                String response = flujoDatosEntrada.readUTF();
             
                switch(response) {
                    case "SERVER : OK NOOP":
                        break;
                    default:
                        JOptionPane.showMessageDialog(null, "Ha ocurrido un error con la conexion al servidor.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Ha ocurrido un error con la conexion al servidor.", "Error", JOptionPane.ERROR_MESSAGE);
                System.out.println("Error al conectar");
            }
        }
    };
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IpInput;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
